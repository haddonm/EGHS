% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hcr.R
\name{constantrefhcr}
\alias{constantrefhcr}
\title{constantrefhcr conducts the MCDA using a constant reference period}
\usage{
constantrefhcr(indat, hsargs, glb, projyear, outhcr, iter)
}
\arguments{
\item{indat}{a list of the matrix of cpue x years that forms the
basis of the assessment, the yearnames for the years making up
the cpue data, the aspirational catches from the previous year (that
will be multiplied to give the coming year's aspirational catches), and
a NULL fis and NaS value}

\item{hsargs}{the arguments used within the Harvest strategy's HCR. See the
description for details.}

\item{glb}{the globals object, this needs to contain glb$saunames and
glb$hyrs the number of years of cpuie data}

\item{projyear}{an index of the year for which the acatch are being estimated
thus, if one has 29 years of data hen projyear would be 30.}

\item{outhcr}{a list of arrays generated by makehcrout or makeouthcr from the
TasHS package, depending on whether you are in the projection or do_MSE
functions, within the aMSE package. It becomes the repository of all
the HS scores and other outputs.}

\item{iter}{which iteration within reps is being run. Needed to output the
scores to outhcr}
}
\value{
a list of the acatch, TAC, TAC multiplier, the score, all the
details and a matrix of the reference points
}
\description{
constantrefhcr generates a cpue target reference point using a
fixed reference period, which is input using hsargs. Just like mcdahcr it
conducts the MCDA on the basis of a vector of cpue and
other details prescribed in the function's arguments. Most importantly,
it returns the aspirational catches by sau, the TAC for the zone, and
there are other details. The final score is rounded up to the nearest
integer and that is the index within the harvest control rule.
Thus a score of <=1 points to the first cell, >1 and <=2 points to the
second cell, and so on, up to a score between >9 and <=10 which points
to the last cell. All the arguments used within the mcda are brought in,
inside a list named hsargs, and hence are flexible. This list includes
the 'wid', the number of years to use in grad4, default=4; the
'targqnt', the quantile for the cpue target level, default=0.55, the
'pmwts', performance measure weights, default = 0.65, 0.25, 0.1 for the
target, grad4, and grad1 PMs respectively, so the order matters; the
'hcr', the harvest control rule scales that transform the combined score
into a TAC multiplier. A vector of 1 - 10 where each cell index
represents the upper limit of the the combined score. Now the meta rules
have been included, set them to zero to exclude them. Slightly modified
to allow for single SAU.
}
\examples{
  data(hcrdata)
  iter <- 1
  hsargs <- list(mult=0.1,wid = 4,targqnt = 0.55,
            maxtarg = c(150,150,150,150,150,150,150,150),
            pmwts = c(0.65,0.25,0.1),
            hcr = c(0.25,0.75,0.8,0.85,0.9,1,1.05,1.1,1.15,1.2),
            hcrm3 = c(0.25,0.75,0.8,0.85,0.9,1,1.1,1.15,1.2,1.25),
            startCE = 1992,endCE = 2020,metRunder = 2,metRover = 2,
            decrement=1, pmwtSwitch = 4,stablewts = c(0.4, 0.5, 0.1),
            hcrname="mcdahcr")
    glb <- list(saunames=c("sau6","sau7","sau8","sau9","sau10","sau11",
                           "sau12","sau13"),yrnames=hcrdata$yearnames,
                hyrs=29,pyrs=1,reps=1,hyrnames=1992:2020,pyrnames=2021)
  outhcr <- makeouthcr(glb,hsargs)          
  hcrout <- constantrefhcr(hcrdata,hsargs=hsargs,glb,
                           projyear=(nrow(hcrdata$arrce)+1),outhcr,iter)
  str(hcrout)
}
\seealso{
{
\link{getgrad1}, \link{getgrad4}, \link{getscore},
\link{targscoreconstref}, \link{getlmcoef}
}
}
